generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model analytics_aggregates {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  link_id                 String?   @db.Uuid
  period                  String    @db.VarChar(10)
  period_start            DateTime  @db.Timestamptz(6)
  total_clicks            Int       @default(0)
  unique_visitors         Int       @default(0)
  device_breakdown        Json?
  browser_breakdown       Json?
  os_breakdown            Json?
  country_breakdown       Json?
  referrer_type_breakdown Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
  links                   links?    @relation(fields: [link_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([link_id, period, period_start], map: "unique_link_period_start")
  @@index([link_id, period, period_start], map: "idx_analytics_aggregates_link_period")
  @@index([period_start], map: "idx_analytics_aggregates_period_start")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model campaigns {
  id           String     @id @db.Uuid
  workspace_id String     @db.Uuid
  name         String
  description  String?
  start_date   DateTime?  @db.Timestamptz(6)
  end_date     DateTime?  @db.Timestamptz(6)
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  links        links[]

  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model click_events {
  id              String   @id @db.Uuid
  link_id         String   @db.Uuid
  timestamp       DateTime @default(now()) @db.Timestamptz(6)
  ip_address      String?
  user_agent      String?
  referer         String?
  device          String?
  os              String?
  browser         String?
  country         String?
  region          String?
  city            String?
  latitude        Float?
  longitude       Float?
  browser_version String?  @db.VarChar(20)
  os_version      String?  @db.VarChar(20)
  referrer_type   String?  @db.VarChar(20)
  utm_source      String?  @db.VarChar(100)
  utm_medium      String?  @db.VarChar(100)
  utm_campaign    String?  @db.VarChar(100)
  utm_term        String?  @db.VarChar(100)
  utm_content     String?  @db.VarChar(100)
  links           links    @relation(fields: [link_id], references: [id], onDelete: Cascade)

  @@index([link_id])
  @@index([timestamp])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model folders {
  id            String     @id @db.Uuid
  workspace_id  String     @db.Uuid
  name          String
  parent_id     String?    @db.Uuid
  level         Int        @default(0)
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime   @db.Timestamptz(6)
  description   String?
  folders       folders?   @relation("foldersTofolders", fields: [parent_id], references: [id], onDelete: Cascade)
  other_folders folders[]  @relation("foldersTofolders")
  workspaces    workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  links         links[]

  @@index([parent_id])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model links {
  id                      String                 @id @db.Uuid
  workspace_id            String                 @db.Uuid
  folder_id               String?                @db.Uuid
  campaign_id             String?                @db.Uuid
  slug                    String                 @unique
  url                     String
  title                   String?
  description             String?
  image                   String?
  favicon                 String?
  password                String?
  expires_at              DateTime?              @db.Timestamptz(6)
  is_active               Boolean                @default(true)
  click_limit             Int?
  click_count             Int                    @default(0)
  last_clicked_at         DateTime?              @db.Timestamptz(6)
  utm_source              String?
  utm_medium              String?
  utm_campaign            String?
  utm_term                String?
  utm_content             String?
  ios_url                 String?
  android_url             String?
  enable_geolocation      Boolean                @default(false)
  enable_device_targeting Boolean                @default(false)
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime               @db.Timestamptz(6)
  analytics_aggregates    analytics_aggregates[]
  click_events            click_events[]
  campaigns               campaigns?             @relation(fields: [campaign_id], references: [id])
  folders                 folders?               @relation(fields: [folder_id], references: [id])
  workspaces              workspaces             @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([campaign_id])
  @@index([folder_id])
  @@index([slug])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                    String                  @id @db.Uuid
  email                 String                  @unique
  name                  String?
  avatar_url            String?
  is_suspended          Boolean                 @default(false)
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                @db.Timestamptz(6)
  audit_logs            audit_logs[]
  workspace_invitations workspace_invitations[]
  workspace_memberships workspace_memberships[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workspace_memberships {
  id           String     @id @db.Uuid
  user_id      String     @db.Uuid
  workspace_id String     @db.Uuid
  role         String     @default("member")
  joined_at    DateTime   @default(now()) @db.Timestamptz(6)
  users        users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([user_id, workspace_id])
  @@index([user_id])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workspaces {
  id                     String                  @id @db.Uuid
  name                   String
  slug                   String                  @unique
  domain                 String?
  plan                   String                  @default("free")
  stripe_customer_id     String?                 @unique
  stripe_subscription_id String?                 @unique
  max_links              Int                     @default(50)
  max_clicks             Int                     @default(5000)
  max_users              Int                     @default(1)
  custom_limits          Json?                   // Admin overrides: {beta_user: boolean, vip_customer: boolean, temp_increases: {links: 100, expires: "2024-01-01"}}
  created_at             DateTime                @default(now()) @db.Timestamptz(6)
  updated_at             DateTime                @db.Timestamptz(6)
  deleted_at             DateTime?               @db.Timestamptz(6)
  audit_logs             audit_logs[]
  campaigns              campaigns[]
  folders                folders[]
  links                  links[]
  utm_templates          utm_templates[]
  workspace_invitations  workspace_invitations[]
  workspace_memberships  workspace_memberships[]
  subscriptions          subscriptions?
  usage_metrics          usage_metrics[]
  invoices               invoices[]
  payment_methods        payment_methods[]

  @@index([slug])
  @@index([deleted_at])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model utm_templates {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  name         String
  description  String?
  utm_source   String?    @db.VarChar(255)
  utm_medium   String?    @db.VarChar(255)
  utm_campaign String?    @db.VarChar(255)
  utm_term     String?    @db.VarChar(255)
  utm_content  String?    @db.VarChar(255)
  created_by   String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @default(now()) @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workspace_invitations {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  email        String
  role         String     @default("member")
  token        String     @unique
  invited_by   String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  expires_at   DateTime   @db.Timestamptz(6)
  accepted_at  DateTime?  @db.Timestamptz(6)
  revoked_at   DateTime?  @db.Timestamptz(6)
  users        users      @relation(fields: [invited_by], references: [id])
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
  @@index([email])
  @@index([token])
  @@index([expires_at])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  user_id      String?    @db.Uuid
  action       String     @db.VarChar(100)
  entity_type  String     @db.VarChar(50)
  entity_id    String?    @db.VarChar(255)
  metadata     Json?
  ip_address   String?    @db.Inet
  user_agent   String?
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  users        users?     @relation(fields: [user_id], references: [id])
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
  @@index([user_id])
  @@index([action])
  @@index([created_at(sort: Desc)])
  @@index([entity_type, entity_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model subscriptions {
  id                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id           String     @unique @db.Uuid
  stripe_subscription_id String     @unique
  stripe_price_id        String
  status                 String
  current_period_start   DateTime   @db.Timestamptz(6)
  current_period_end     DateTime   @db.Timestamptz(6)
  cancel_at_period_end   Boolean    @default(false)
  canceled_at            DateTime?  @db.Timestamptz(6)
  trial_start            DateTime?  @db.Timestamptz(6)
  trial_end              DateTime?  @db.Timestamptz(6)
  created_at             DateTime   @default(now()) @db.Timestamptz(6)
  updated_at             DateTime   @default(now()) @db.Timestamptz(6)
  workspaces             workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
  @@index([status])
  @@index([current_period_end])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model usage_metrics {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  metric_type  String     @db.VarChar(50) // 'links', 'clicks', 'users'
  value        Int        @default(0)
  period       String     @db.VarChar(20) // 'daily', 'monthly', 'lifetime'
  period_start DateTime   @db.Timestamptz(6)
  period_end   DateTime   @db.Timestamptz(6)
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @default(now()) @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([workspace_id, metric_type, period, period_start], map: "unique_workspace_metric_period")
  @@index([workspace_id])
  @@index([metric_type])
  @@index([period_start, period_end])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model invoices {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id      String     @db.Uuid
  stripe_invoice_id String     @unique
  invoice_number    String?
  amount_due        Int        // In cents
  amount_paid       Int        // In cents
  amount_remaining  Int        @default(0) // In cents
  currency          String     @default("usd") @db.VarChar(3)
  status            String     @db.VarChar(50) // 'draft', 'open', 'paid', 'void', 'uncollectible'
  due_date          DateTime?  @db.Timestamptz(6)
  paid_at           DateTime?  @db.Timestamptz(6)
  invoice_pdf       String?    // URL to PDF
  hosted_invoice_url String?   // Stripe hosted invoice page
  created_at        DateTime   @default(now()) @db.Timestamptz(6)
  updated_at        DateTime   @default(now()) @db.Timestamptz(6)
  workspaces        workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
  @@index([status])
  @@index([due_date])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payment_methods {
  id                       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id             String     @db.Uuid
  stripe_payment_method_id String     @unique
  type                     String     @db.VarChar(20) // 'card', 'bank_account', etc.
  card_brand               String?    @db.VarChar(20) // 'visa', 'mastercard', 'amex', etc.
  card_last4               String?    @db.VarChar(4)
  card_exp_month           Int?
  card_exp_year            Int?
  is_default               Boolean    @default(false)
  created_at               DateTime   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime   @default(now()) @db.Timestamptz(6)
  workspaces               workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([workspace_id])
  @@index([is_default])
}
