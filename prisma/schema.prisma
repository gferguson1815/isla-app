generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model analytics_aggregates {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  link_id                 String?   @db.Uuid
  period                  String    @db.VarChar(10)
  period_start            DateTime  @db.Timestamptz(6)
  total_clicks            Int       @default(0)
  unique_visitors         Int       @default(0)
  device_breakdown        Json?
  browser_breakdown       Json?
  os_breakdown            Json?
  country_breakdown       Json?
  referrer_type_breakdown Json?
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
  links                   links?    @relation(fields: [link_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([link_id, period, period_start], map: "unique_link_period_start")
  @@index([link_id, period, period_start], map: "idx_analytics_aggregates_link_period")
  @@index([period_start], map: "idx_analytics_aggregates_period_start")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_logs {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  user_id      String?    @db.Uuid
  action       String     @db.VarChar(100)
  entity_type  String     @db.VarChar(50)
  entity_id    String?    @db.VarChar(255)
  metadata     Json?
  ip_address   String?    @db.Inet
  user_agent   String?
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  users        users?     @relation(fields: [user_id], references: [id])
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([action])
  @@index([created_at(sort: Desc)])
  @@index([entity_type, entity_id])
  @@index([user_id])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model campaigns {
  id           String     @id @db.Uuid
  workspace_id String     @db.Uuid
  name         String
  description  String?
  start_date   DateTime?  @db.Timestamptz(6)
  end_date     DateTime?  @db.Timestamptz(6)
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  links        links[]

  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model click_events {
  id              String   @id @db.Uuid
  link_id         String   @db.Uuid
  timestamp       DateTime @default(now()) @db.Timestamptz(6)
  ip_address      String?
  user_agent      String?
  referer         String?
  device          String?
  os              String?
  browser         String?
  country         String?
  region          String?
  city            String?
  latitude        Float?
  longitude       Float?
  browser_version String?  @db.VarChar(20)
  os_version      String?  @db.VarChar(20)
  referrer_type   String?  @db.VarChar(20)
  utm_source      String?  @db.VarChar(100)
  utm_medium      String?  @db.VarChar(100)
  utm_campaign    String?  @db.VarChar(100)
  utm_term        String?  @db.VarChar(100)
  utm_content     String?  @db.VarChar(100)
  links           links    @relation(fields: [link_id], references: [id], onDelete: Cascade)

  @@index([link_id])
  @@index([timestamp])
}

model domains {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id       String     @db.Uuid
  domain             String     @unique
  status             String     @default("pending") @db.VarChar(20)
  verification_token String?    @db.VarChar(255)
  verified_at        DateTime?  @db.Timestamptz(6)
  is_primary         Boolean    @default(false)
  ssl_status         String?    @db.VarChar(20)
  dns_configured     Boolean    @default(false)
  created_by         String     @db.Uuid
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime   @default(now()) @db.Timestamptz(6)
  users              users      @relation(fields: [created_by], references: [id])
  workspaces         workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([domain])
  @@index([status])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model folders {
  id            String        @id @db.Uuid
  workspace_id  String        @db.Uuid
  name          String
  parent_id     String?       @db.Uuid
  level         Int           @default(0)
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  updated_at    DateTime      @db.Timestamptz(6)
  description   String?
  folders       folders?      @relation("foldersTofolders", fields: [parent_id], references: [id], onDelete: Cascade)
  other_folders folders[]     @relation("foldersTofolders")
  workspaces    workspaces    @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  link_drafts   link_drafts[]
  links         links[]

  @@index([parent_id])
  @@index([workspace_id])
}

model invoices {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id       String     @db.Uuid
  stripe_invoice_id  String     @unique
  invoice_number     String?
  amount_due         Int
  amount_paid        Int
  amount_remaining   Int        @default(0)
  currency           String     @default("usd") @db.VarChar(3)
  status             String     @db.VarChar(50)
  due_date           DateTime?  @db.Timestamptz(6)
  paid_at            DateTime?  @db.Timestamptz(6)
  invoice_pdf        String?
  hosted_invoice_url String?
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  updated_at         DateTime   @default(now()) @db.Timestamptz(6)
  workspaces         workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([due_date])
  @@index([status])
  @@index([workspace_id])
}

model link_imports {
  id            String     @id @db.Uuid
  workspace_id  String     @db.Uuid
  file_name     String
  total_rows    Int
  success_count Int
  error_count   Int
  status        String     @db.VarChar(20)
  created_by    String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamptz(6)
  workspaces    workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  links         links[]

  @@index([created_at])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model links {
  id                      String                 @id @db.Uuid
  workspace_id            String                 @db.Uuid
  folder_id               String?                @db.Uuid
  campaign_id             String?                @db.Uuid
  slug                    String                 @unique
  url                     String
  title                   String?
  description             String?
  image                   String?
  favicon                 String?
  password                String?
  expires_at              DateTime?              @db.Timestamptz(6)
  expiration_url          String?
  is_active               Boolean                @default(true)
  click_limit             Int?
  click_count             Int                    @default(0)
  last_clicked_at         DateTime?              @db.Timestamptz(6)
  utm_source              String?
  utm_medium              String?
  utm_campaign            String?
  utm_term                String?
  utm_content             String?
  ios_url                 String?
  android_url             String?
  enable_geolocation      Boolean                @default(false)
  enable_device_targeting Boolean                @default(false)
  geo_targeting           Json?
  device_targeting        Json?
  link_cloaking           Boolean                @default(false)
  seo_indexing            Boolean                @default(true)
  external_id             String?
  tenant_id               String?
  created_at              DateTime               @default(now()) @db.Timestamptz(6)
  updated_at              DateTime               @db.Timestamptz(6)
  created_by              String                 @db.Uuid
  tags                    String[]               @default([])
  deleted_at              DateTime?              @db.Timestamptz(6)
  import_id               String?                @db.Uuid
  qr_code_settings        Json?
  analytics_aggregates    analytics_aggregates[]
  click_events            click_events[]
  campaigns               campaigns?             @relation(fields: [campaign_id], references: [id])
  users                   users                  @relation(fields: [created_by], references: [id])
  folders                 folders?               @relation(fields: [folder_id], references: [id])
  link_imports            link_imports?          @relation(fields: [import_id], references: [id])
  workspaces              workspaces             @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([campaign_id])
  @@index([created_by])
  @@index([folder_id])
  @@index([slug])
  @@index([workspace_id])
}

model payment_methods {
  id                       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id             String     @db.Uuid
  stripe_payment_method_id String     @unique
  type                     String     @db.VarChar(20)
  card_brand               String?    @db.VarChar(20)
  card_last4               String?    @db.VarChar(4)
  card_exp_month           Int?
  card_exp_year            Int?
  is_default               Boolean    @default(false)
  created_at               DateTime   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime   @default(now()) @db.Timestamptz(6)
  workspaces               workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([is_default])
  @@index([workspace_id])
}

model subscriptions {
  id                     String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id           String     @unique @db.Uuid
  stripe_subscription_id String     @unique
  stripe_price_id        String
  status                 String
  current_period_start   DateTime   @db.Timestamptz(6)
  current_period_end     DateTime   @db.Timestamptz(6)
  cancel_at_period_end   Boolean    @default(false)
  canceled_at            DateTime?  @db.Timestamptz(6)
  trial_start            DateTime?  @db.Timestamptz(6)
  trial_end              DateTime?  @db.Timestamptz(6)
  created_at             DateTime   @default(now()) @db.Timestamptz(6)
  updated_at             DateTime   @default(now()) @db.Timestamptz(6)
  workspaces             workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([current_period_end])
  @@index([status])
  @@index([workspace_id])
}

model link_drafts {
  id                  String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id        String     @db.Uuid
  user_id             String     @db.Uuid
  destination_url     String?
  slug                String?
  domain              String?    @default("dub.sh")
  folder_id           String?    @db.Uuid
  title               String?
  description         String?
  image               String?
  tags                String[]   @default([])
  comments            String?
  utm_source          String?
  utm_medium          String?
  utm_campaign        String?
  utm_term            String?
  utm_content         String?
  password            String?
  expires_at          DateTime?  @db.Timestamptz(6)
  expiration_url      String?
  click_limit         Int?
  ios_url             String?
  android_url         String?
  geo_targeting       Json?
  device_targeting    Json?
  qr_code_settings    Json?
  conversion_tracking Json?
  form_data           Json?
  link_cloaking       Boolean    @default(false)
  seo_indexing        Boolean    @default(true)
  external_id         String?
  tenant_id           String?
  created_at          DateTime   @default(now()) @db.Timestamptz(6)
  updated_at          DateTime   @default(now()) @updatedAt @db.Timestamptz(6)
  expires_at_draft    DateTime   @default(dbgenerated("(now() + '30 days'::interval)")) @db.Timestamptz(6)
  folder              folders?   @relation(fields: [folder_id], references: [id])
  user                users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  workspace           workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([user_id, workspace_id, id])
  @@unique([user_id, workspace_id, id], map: "idx_link_drafts_unique")
  @@index([user_id, workspace_id])
  @@index([updated_at(sort: Desc)])
  @@index([expires_at_draft])
  @@index([expires_at_draft], map: "idx_link_drafts_expires")
  @@index([updated_at], map: "idx_link_drafts_updated")
  @@index([user_id, workspace_id], map: "idx_link_drafts_user_workspace")
}

model tags {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  name         String     @db.VarChar(50)
  usage_count  Int        @default(0)
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @default(now()) @db.Timestamptz(6)
  color        String?    @db.VarChar(7)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([workspace_id, name], map: "workspace_id_name")
  @@index([name])
  @@index([workspace_id])
}

model usage_metrics {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  metric_type  String     @db.VarChar(50)
  value        Int        @default(0)
  period       String     @db.VarChar(20)
  period_start DateTime   @db.Timestamptz(6)
  period_end   DateTime   @db.Timestamptz(6)
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @default(now()) @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([workspace_id, metric_type, period, period_start], map: "unique_workspace_metric_period")
  @@index([metric_type])
  @@index([period_start, period_end])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                    String                  @id @db.Uuid
  email                 String                  @unique
  name                  String?
  avatar_url            String?
  is_suspended          Boolean                 @default(false)
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  updated_at            DateTime                @db.Timestamptz(6)
  audit_logs            audit_logs[]
  domains               domains[]
  link_drafts           link_drafts[]
  links                 links[]
  utm_templates         utm_templates[]
  workspace_invitations workspace_invitations[]
  workspace_memberships workspace_memberships[]
}

model utm_templates {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  name         String
  description  String?
  utm_source   String?    @db.VarChar(255)
  utm_medium   String?    @db.VarChar(255)
  utm_campaign String?    @db.VarChar(255)
  utm_term     String?    @db.VarChar(255)
  utm_content  String?    @db.VarChar(255)
  referral     String?    @db.VarChar(255)
  created_by   String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  updated_at   DateTime   @default(now()) @db.Timestamptz(6)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)
  creator      users      @relation(fields: [created_by], references: [id], onDelete: Cascade)

  @@index([workspace_id])
}

model workspace_invitations {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  email        String
  role         String     @default("member")
  token        String     @unique
  invited_by   String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamptz(6)
  expires_at   DateTime   @db.Timestamptz(6)
  accepted_at  DateTime?  @db.Timestamptz(6)
  revoked_at   DateTime?  @db.Timestamptz(6)
  users        users      @relation(fields: [invited_by], references: [id])
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@index([email])
  @@index([expires_at])
  @@index([token])
  @@index([workspace_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workspace_memberships {
  id           String     @id @db.Uuid
  user_id      String     @db.Uuid
  workspace_id String     @db.Uuid
  role         String     @default("member")
  joined_at    DateTime   @default(now()) @db.Timestamptz(6)
  users        users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  workspaces   workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade)

  @@unique([user_id, workspace_id])
  @@index([user_id])
  @@index([workspace_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workspaces {
  id                        String                  @id @db.Uuid
  name                      String
  slug                      String                  @unique
  domain                    String?
  plan                      String                  @default("free")
  stripe_customer_id        String?                 @unique
  stripe_subscription_id    String?                 @unique
  max_links                 Int                     @default(50)
  max_clicks                Int                     @default(5000)
  max_users                 Int                     @default(1)
  created_at                DateTime                @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                @db.Timestamptz(6)
  deleted_at                DateTime?               @db.Timestamptz(6)
  custom_limits             Json?
  logo_url                  String?
  onboarding_completed      Boolean                 @default(false)
  onboarding_completed_at   DateTime?               @db.Timestamptz(6)
  onboarding_steps          Json?
  getting_started_dismissed Boolean                 @default(false)
  audit_logs                audit_logs[]
  campaigns                 campaigns[]
  domains                   domains[]
  feature_usage             feature_usage[]
  folders                   folders[]
  invoices                  invoices[]
  link_drafts               link_drafts[]
  link_imports              link_imports[]
  links                     links[]
  payment_methods           payment_methods[]
  subscriptions             subscriptions?
  tags                      tags[]
  usage_metrics             usage_metrics[]
  utm_templates             utm_templates[]
  workspace_invitations     workspace_invitations[]
  workspace_memberships     workspace_memberships[]

  @@index([deleted_at])
  @@index([slug])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model features {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  key           String          @unique @db.VarChar(100)
  name          String          @db.VarChar(255)
  description   String?
  category      String?         @db.VarChar(100)
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?       @default(now()) @updatedAt @db.Timestamptz(6)
  feature_usage feature_usage[]
  plan_features plan_features[]

  @@index([category], map: "idx_features_category")
  @@index([key], map: "idx_features_key")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model plan_features {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan           String    @db.VarChar(50)
  feature_id     String    @db.Uuid
  enabled        Boolean?  @default(false)
  limit_value    Int?
  custom_message String?
  metadata       Json?
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  updated_at     DateTime? @default(now()) @updatedAt @db.Timestamptz(6)
  feature        features  @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([plan, feature_id])
  @@index([feature_id], map: "idx_plan_features_feature_id")
  @@index([plan], map: "idx_plan_features_plan")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model feature_usage {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String     @db.Uuid
  feature_id   String     @db.Uuid
  usage_count  Int?       @default(0)
  last_used_at DateTime?  @db.Timestamptz(6)
  created_at   DateTime?  @default(now()) @db.Timestamptz(6)
  feature      features   @relation(fields: [feature_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workspace    workspaces @relation(fields: [workspace_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([workspace_id, feature_id])
  @@index([feature_id], map: "idx_feature_usage_feature_id")
  @@index([workspace_id], map: "idx_feature_usage_workspace_id")
}
